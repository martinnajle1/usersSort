{"version":3,"sources":["useCart.js","cartReducer.tsx","CartLogo.jsx","App.tsx","reportWebVitals.js","index.js"],"names":["productsJson","name","price","useCart","useState","loading","setLoading","products","setProducts","useEffect","setTimeout","cartReducer","state","action","type","payload","item","filter","elem","index","cloned","tmp","CartLogo","class","App","useProducts","useReducer","cart","dispatch","addProduct","containsItem","Item","React","memo","onClick","find","it","className","map","removeProduct","reduce","acc","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9ddd2fa.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nconst productsJson = [\n  { name: 'coke', price: 123 },\n  { name: 'chocolate', price: 18 },\n  { name: 'beer', price: 140 },\n  { name: 'meat', price: 200 },\n];\nconst useCart = () => {\n  const [loading, setLoading] = useState(true);\n  const [products, setProducts] = useState([]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n      setProducts(productsJson);\n    }, 3000);\n  }, []);\n  return {\n    loading,\n    products,\n  };\n};\nexport default useCart;\n","import {ItemType, PayloadType } from './cartTypes';\n\nconst cartReducer = (\n    state: ItemType[],\n    action: { type: string; payload: PayloadType }\n  ): ItemType[] => {\n    const { type, payload } = action;\n    switch (type) {\n      case 'ADD':\n        if (payload.item) {\n          return [...state, payload.item];\n        }\n        return state;\n      case 'REMOVE':\n        return state.filter((elem) => elem.name !== payload?.item?.name);\n      case 'UP':\n        const { index } = payload;\n        if (index && (index > 0)) {\n          const cloned = [...state];\n          const tmp = cloned[index - 1];\n          cloned[index - 1] = cloned[index];\n          cloned[index] = tmp;\n          return cloned;\n        }\n        return state;\n      default:\n        return state;\n    }\n  };\n  export default cartReducer;","import './CartLogo.css';\nconst CartLogo = () => (\n<div class=\"cart\">\n<div class=\"body-outside\">\n  <div class=\"body\"></div>\n  <div class=\"line\"></div>\n  <div class=\"line-1\"></div>\n  <div class=\"line-2\"></div>\n</div>\n<div class=\"tire\"></div>\n<div class=\"bottom\"></div>\n <div class=\"side-line\"></div>\n <div class=\"side-line-2\"></div>\n <div class=\"handle\"></div>\n</div>\n);\nexport default CartLogo;","import React, { useReducer } from 'react';\nimport useProducts from './useCart';\nimport { ItemType } from './cartTypes';\nimport cartReducer from './cartReducer';\nimport CartLogo from './CartLogo';\nimport './App.css';\n\nfunction App() {\n  const { loading, products }: { loading: boolean; products: ItemType[] } =\n    useProducts();\n  const initialState: ItemType[] = [];\n  const [cart, dispatch] = useReducer(cartReducer, initialState);\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n  const addProduct = (item: ItemType) => {\n    if (!containsItem(item)) {\n      dispatch({ type: 'ADD', payload: { item } });\n    }\n  };\n\n  interface ItemProps {\n    item: ItemType;\n    onClick: Function;\n  }\n  const Item: React.FC<ItemProps> = React.memo(({ item }) => {\n    const { name } = item;\n    return (\n      <div key={name} onClick={() => addProduct(item)}>\n        {item.name} <span>Price: {item.price}</span>\n      </div>\n    );\n  });\n  const removeProduct = (item: ItemType) => {\n    dispatch({ type: 'REMOVE', payload: { item } });\n  };\n  const containsItem = (item: ItemType) =>\n    cart && cart.find((it: ItemType) => it.name === item.name);\n  const curry = (f: Function) => {\n    return (a: any) => {\n      return (b: any) => {\n        return f(a, b);\n      };\n    };\n  };\n  // const value = 'ee';\n  const filter = (prod: ItemType[], value: string) => {\n    return prod.filter((item: ItemType) => {\n      return item.name.includes(value);\n    });\n  };\n  // const filteredElements = curry(filter);\n\n  return (\n    <div className=\"App\">\n      <CartLogo />\n      <div className=\"products\">\n        <h3>Products</h3>\n        {products.map((item: ItemType) => {\n          return <Item item={item} onClick={() => addProduct(item)} />;\n        })}\n      </div>\n\n      <h2>Cart</h2>\n      {cart &&\n        cart.map((item: ItemType, index: number) => {\n          const { name } = item;\n          return (\n            <>\n              <div\n                key={name}\n                onClick={() => dispatch({ type: 'UP', payload: { index } })}\n              >\n                {item.name}\n              </div>\n              <span onClick={() => removeProduct(item)}>X</span>\n            </>\n          );\n        })}\n      <div>\n        Total Cart!:\n        <strong>\n          {cart.reduce((acc: number, item: ItemType) => acc + item.price, 0)}\n        </strong>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}